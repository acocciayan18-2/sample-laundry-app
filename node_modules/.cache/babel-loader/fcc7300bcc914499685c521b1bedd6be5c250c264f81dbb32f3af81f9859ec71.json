{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Documents\\\\sample-laundry-app\\\\sample-laundry-app-main\\\\src\\\\pages\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\n// src/pages/SignUp.js\nimport { useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\nimport { LoginPopup } from \"../modal/LoginPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nexport default function SignUp() {\n  _s();\n  const [popup, setPopup] = useState({\n    message: \"\",\n    type: \"info\"\n  });\n  const closePopup = () => setPopup({\n    message: \"\",\n    type: \"info\"\n  });\n  const testSignup = async () => {\n    try {\n      // Simulate random success or failure\n      const isSuccess = Math.random() > 0.5;\n      if (isSuccess) {\n        // Example EmailJS send (you can comment out if testing popup only)\n        await emailjs.send(\"service_j61dqw1\", \"template_jijqua1\", {\n          otp: Math.floor(100000 + Math.random() * 900000),\n          email: \"test@example.com\"\n        }, \"evCxW5Fmv_kR4q8gh\");\n        setPopup({\n          message: \"Signup successful! Check your email.\",\n          type: \"success\"\n        });\n      } else {\n        throw new Error(\"Simulated failure\");\n      }\n    } catch (err) {\n      console.error(err);\n      setPopup({\n        message: \"Signup failed. Try again later.\",\n        type: \"error\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(LoginPopup, {\n      message: popup.message,\n      type: popup.type,\n      onClose: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Create Admin Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Testing LoginPopup with random success/error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        style: {\n          width: \"100%\",\n          marginTop: \"1rem\"\n        },\n        onClick: testSignup,\n        children: \"Test Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"0EEh6yNjDbk4Rb5My+BCjQS73rI=\");\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","emailjs","LoginPopup","jsxDEV","_jsxDEV","SignUp","_s","popup","setPopup","message","type","closePopup","testSignup","isSuccess","Math","random","send","otp","floor","email","Error","err","console","error","className","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","style","width","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pc/Documents/sample-laundry-app/sample-laundry-app-main/src/pages/SignUp.jsx"],"sourcesContent":["// src/pages/SignUp.js\r\nimport { useState } from \"react\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport { LoginPopup } from \"../modal/LoginPopup\";;\r\n\r\n\r\nexport default function SignUp() {\r\n  const [popup, setPopup] = useState({ message: \"\", type: \"info\" });\r\n\r\n  const closePopup = () => setPopup({ message: \"\", type: \"info\" });\r\n\r\n  const testSignup = async () => {\r\n    try {\r\n      // Simulate random success or failure\r\n      const isSuccess = Math.random() > 0.5;\r\n\r\n      if (isSuccess) {\r\n        // Example EmailJS send (you can comment out if testing popup only)\r\n        await emailjs.send(\r\n          \"service_j61dqw1\",\r\n          \"template_jijqua1\",\r\n          { otp: Math.floor(100000 + Math.random() * 900000), email: \"test@example.com\" },\r\n          \"evCxW5Fmv_kR4q8gh\"\r\n        );\r\n\r\n        setPopup({ message: \"Signup successful! Check your email.\", type: \"success\" });\r\n      } else {\r\n        throw new Error(\"Simulated failure\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setPopup({ message: \"Signup failed. Try again later.\", type: \"error\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <LoginPopup message={popup.message} type={popup.type} onClose={closePopup} />\r\n\r\n      <div className=\"card\">\r\n        <h3 className=\"text-center\">Create Admin Account</h3>\r\n        <p className=\"text-center\">Testing LoginPopup with random success/error</p>\r\n\r\n        <button\r\n          className=\"btn-primary\"\r\n          style={{ width: \"100%\", marginTop: \"1rem\" }}\r\n          onClick={testSignup}\r\n        >\r\n          Test Signup\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA;AAGjD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IAAES,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAO,CAAC,CAAC;EAEjE,MAAMC,UAAU,GAAGA,CAAA,KAAMH,QAAQ,CAAC;IAAEC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAO,CAAC,CAAC;EAEhE,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MAErC,IAAIF,SAAS,EAAE;QACb;QACA,MAAMZ,OAAO,CAACe,IAAI,CAChB,iBAAiB,EACjB,kBAAkB,EAClB;UAAEC,GAAG,EAAEH,IAAI,CAACI,KAAK,CAAC,MAAM,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC;UAAEI,KAAK,EAAE;QAAmB,CAAC,EAC/E,mBACF,CAAC;QAEDX,QAAQ,CAAC;UAAEC,OAAO,EAAE,sCAAsC;UAAEC,IAAI,EAAE;QAAU,CAAC,CAAC;MAChF,CAAC,MAAM;QACL,MAAM,IAAIU,KAAK,CAAC,mBAAmB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBb,QAAQ,CAAC;QAAEC,OAAO,EAAE,iCAAiC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzE;EACF,CAAC;EAED,oBACEN,OAAA;IAAKoB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BrB,OAAA,CAACF,UAAU;MAACO,OAAO,EAAEF,KAAK,CAACE,OAAQ;MAACC,IAAI,EAAEH,KAAK,CAACG,IAAK;MAACgB,OAAO,EAAEf;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE7E1B,OAAA;MAAKoB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBrB,OAAA;QAAIoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrD1B,OAAA;QAAGoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAA4C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE3E1B,OAAA;QACEoB,SAAS,EAAC,aAAa;QACvBO,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO,CAAE;QAC5CC,OAAO,EAAEtB,UAAW;QAAAa,QAAA,EACrB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CA/CuBD,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}